"""
This script runs the SurveyApp application using a development server.
"""
  <li><a href="{{ url_for('experiments') }}">Room of experiments</a></li>




from flask import Flask
from datetime import datetime
from flask import render_template, redirect, request , url_for
from flask import Flask
from wtforms import StringField, SubmitField
from wtforms.validators import DataRequired
import os
from flask_sqlalchemy import SQLAlchemy
from sqlalchemy import databases
from sqlalchemy import (Table, Column, Integer, Numeric, String, DateTime,
                        ForeignKey, Boolean)
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship, backref

from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker






engine = create_engine('sqlite:///:memory:')

Session = sessionmaker(bind=engine)

session = Session()
app = Flask(__name__)

basedir = os.path.abspath(os.path.dirname(__file__))


app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///' + os.path.join(basedir, "survey.db")

db = SQLAlchemy(app)





from os import environ
from SurveyApp import app

if __name__ == '__main__':
    HOST = environ.get('SERVER_HOST', 'localhost')
    try:
        PORT = int(environ.get('SERVER_PORT', '5555'))
    except ValueError:
        PORT = 5555
    app.run(HOST, PORT)


#ÃŸfrom SurveyApp import app
n_user = User(username='Xavier', nationality='Irish', gender='Female', age='60')




def __repr__(self): 
        return "User(username='{self.username}', " \
                       "nationality='{self.nationality}', " \
                       "gender='{self.gender}', " \
                       "age={self.age}, " .format(self=self)



class Arglist(db.Model):
    __table__ ='argument_list'
    id = db.Column(db.Integer, primary_key=True)
    side = db.Column(db.String(50), nullable=False)
    title = db.Column(db.String(50), nullable=False)
    claim = db.Column(db.String(200), nullable=False)

    
def __repr__(self): 
        return "Arglist(side='{self.side}', " \
                       "title='{self.title}', " \
                       "claim='{self.claim}".format(self=self)





@app.route('/')
@app.route('/home')
def home():
    """Renders the home page."""
  
    return render_template(
        'index.html',
        title='Home Page',
        year=datetime.now().year,
    )
    
@app.route('/questionay')
def questionary():
    """Renders the survey page."""
   

    return render_template(
        'qs.html',
        title='Survey page',

        year=datetime.now().year,
    )


db.drop_all()
db.create_all()

from views import db
from views import User

# create users

u1 = enduser(name='Xavier', nationality='Irish', gender='Male', age='60')
u2= User(username='Peter', nationality='Irish', gender='Male', age='60')


db.session.add(u1)
db.session.add(u2)

db.session.commit()

User.query.all()
User.query.filter_by(nationality='Irish').first()
User = db.session.query(User).all()


sqlite3 
. open survey.db
.tables
select * from Users; 

    name = request.form['name']
    nationality = request.form['nationality']
    gender = request.form['gender']
    age = request.form['age']


name=name, nationality=nationality, gender=gender, age=age


    """
    db.session.add(post)
    db.session.commit()
    return render_template(
        'survey.html',
        title='Survey page',
        year=datetime.now().year,
    )

"""
return '<h4> name:{},nationality:{}, gender:{}, age:{}</h4>'.format(name,nationality,gender,age)
